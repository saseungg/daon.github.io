{"version":3,"sources":["webpack:///./src/components/post-title/index.jsx","webpack:///./src/components/post-date/index.jsx","webpack:///./src/components/post-container/index.jsx","webpack:///./src/components/post-navigator/index.jsx","webpack:///./src/components/utterances/index.jsx","webpack:///./src/templates/blog-post.js"],"names":["PostTitle","_ref","title","React","createElement","PostDate","date","className","PostContainer","html","dangerouslySetInnerHTML","__html","PostNavigator","pageContext","previous","next","Link","to","fields","slug","rel","frontmatter","Utterances","repo","rootElm","createRef","useEffect","isDarkTheme","Dom","THEME","DARK","utterances","document","utterancesConfig","src","branch","theme","label","async","crossorigin","Object","keys","forEach","configKey","setAttribute","current","appendChild","ref","data","location","ScrollManager","post","markdownRemark","metaData","site","siteMetadata","comment","siteUrl","author","postTitle","Layout","Head","description","excerpt","Bio"],"mappings":"oPAEO,MAAMA,EAAYC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAKE,IAAAC,cAAA,UAAKF,I,UCEtC,MAAMG,EAAWJ,IAAe,IAAd,KAAEK,GAAML,EAC/B,OAAOE,IAAAC,cAAA,KAAGG,UAAU,aAAaD,ICHtBE,EAAgBP,IAAA,IAAC,KAAEQ,GAAMR,EAAA,OACpCE,IAAAC,cAAA,OAAKM,wBAAyB,CAAEC,OAAQF,M,sCCEnC,MAAMG,EAAgBX,IAAsB,IAArB,YAAEY,GAAaZ,EAC3C,MAAM,SAAEa,EAAQ,KAAEC,GAASF,EAE3B,OACEV,IAAAC,cAAA,OAAKG,UAAU,uBACbJ,IAAAC,cAAA,WACGU,GACCX,IAAAC,cAACY,OAAI,CAACC,GAAIH,EAASI,OAAOC,KAAMC,IAAI,QAClCjB,IAAAC,cAAA,OAAKG,UAAU,kBACbJ,IAAAC,cAAA,OAAKG,UAAU,aAAY,QAC3BJ,IAAAC,cAAA,OAAKG,UAAU,SAASO,EAASO,YAAYnB,UAKrDC,IAAAC,cAAA,WACGW,GACCZ,IAAAC,cAACY,OAAI,CAACC,GAAIF,EAAKG,OAAOC,KAAMC,IAAI,QAC9BjB,IAAAC,cAAA,OAAKG,UAAU,kBACbJ,IAAAC,cAAA,OAAKG,UAAU,aAAY,QAC3BJ,IAAAC,cAAA,OAAKG,UAAU,SAASQ,EAAKM,YAAYnB,Y,4BCpBvD,MAKaoB,EAAarB,IAAe,IAAd,KAAEsB,GAAMtB,EACjC,MAAMuB,EAAUrB,IAAMsB,YAsBtB,OApBAC,oBAAU,KACR,MAAMC,EAAcC,IAAmBC,IAAMC,MACvCC,EAAaC,SAAS5B,cAAc,UACpC6B,EAAmB,CACvBC,IAZM,gCAaNX,OACAY,OAbS,SAcTC,MAAOT,EAbM,cACC,eAadU,MAAO,UACPC,OAAO,EACP,aAAc,WACdC,YAAa,aAGfC,OAAOC,KAAKR,GAAkBS,QAAQC,IACpCZ,EAAWa,aAAaD,EAAWV,EAAiBU,MAEtDnB,EAAQqB,QAAQC,YAAYf,IAC3B,IAEI5B,IAAAC,cAAA,OAAKG,UAAU,aAAawC,IAAKvB,K,oCCjB3BvB,cAAsC,IAArC,KAAE+C,EAAI,YAAEnC,EAAW,SAAEoC,GAAUhD,EAC7CyB,oBAAU,KACRwB,MACO,IAAMA,OACZ,IAEH,MAAMC,EAAOH,EAAKI,eACZC,EAAWL,EAAKM,KAAKC,cACrB,MAAErD,EAAK,QAAEsD,EAAO,QAAEC,EAAO,OAAEC,GAAWL,GACtC,WAAEtB,GAAeyB,GACftD,MAAOyD,EAAS,KAAErD,GAAS6C,EAAK9B,YAExC,OACElB,IAAAC,cAACwD,IAAM,CAACX,SAAUA,EAAU/C,MAAOA,GACjCC,IAAAC,cAACyD,IAAI,CAAC3D,MAAOyD,EAAWG,YAAaX,EAAKY,UAC1C5D,IAAAC,cAACJ,EAAS,CAACE,MAAOyD,IAClBxD,IAAAC,cAACC,EAAQ,CAACC,KAAMA,IAChBH,IAAAC,cAACI,EAAa,CAACC,KAAM0C,EAAK1C,OAC1BN,IAAAC,cAAA,OAAKG,UAAU,iBACbJ,IAAAC,cAAC4D,IAAG,OAEN7D,IAAAC,cAACQ,EAAa,CAACC,YAAaA,MACzBkB,GAAc5B,IAAAC,cAACkB,EAAU,CAACC,KAAMQ","file":"component---src-templates-blog-post-js-cf5370fbe9f4b8790505.js","sourcesContent":["import React from 'react'\n\nexport const PostTitle = ({ title }) => <h1>{title}</h1>\n","import React from 'react'\n\nimport './index.scss'\n\nexport const PostDate = ({ date }) => {\n  return <p className=\"post-date\">{date}</p>\n}\n","import React from 'react'\n\nexport const PostContainer = ({ html }) => (\n  <div dangerouslySetInnerHTML={{ __html: html }} />\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport './index.scss'\n\nexport const PostNavigator = ({ pageContext }) => {\n  const { previous, next } = pageContext\n\n  return (\n    <div className=\"navigator-container\">\n      <div>\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            <div className=\"post-card prev\">\n              <div className=\"direction\">이전 글</div>\n              <div className=\"title\">{previous.frontmatter.title}</div>\n            </div>\n          </Link>\n        )}\n      </div>\n      <div>\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            <div className=\"post-card next\">\n              <div className=\"direction\">다음 글</div>\n              <div className=\"title\">{next.frontmatter.title}</div>\n            </div>\n          </Link>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\n\nimport * as Dom from '../../utils/dom'\nimport { THEME } from '../../constants'\n\nconst src = 'https://utteranc.es/client.js'\nconst branch = 'master'\nconst DARK_THEME = 'photon-dark'\nconst LIGHT_THEME = 'github-light'\n\nexport const Utterances = ({ repo }) => {\n  const rootElm = React.createRef()\n\n  useEffect(() => {\n    const isDarkTheme = Dom.hasClassOfBody(THEME.DARK)\n    const utterances = document.createElement('script')\n    const utterancesConfig = {\n      src,\n      repo,\n      branch,\n      theme: isDarkTheme ? DARK_THEME : LIGHT_THEME,\n      label: 'comment',\n      async: true,\n      'issue-term': 'pathname',\n      crossorigin: 'anonymous',\n    }\n\n    Object.keys(utterancesConfig).forEach(configKey => {\n      utterances.setAttribute(configKey, utterancesConfig[configKey])\n    })\n    rootElm.current.appendChild(utterances)\n  }, [])\n\n  return <div className=\"utterances\" ref={rootElm} />\n}\n","import React, { useEffect } from 'react'\nimport { graphql } from 'gatsby'\n\nimport { Layout } from '../layout'\nimport { Head } from '../components/head'\nimport { PostTitle } from '../components/post-title'\nimport { PostDate } from '../components/post-date'\nimport { PostContainer } from '../components/post-container'\nimport { Bio } from '../components/bio'\nimport { PostNavigator } from '../components/post-navigator'\nimport { Utterances } from '../components/utterances'\nimport * as ScrollManager from '../utils/scroll'\n\nimport '../styles/code.scss'\nimport '../styles/post.scss'\n\nexport default ({ data, pageContext, location }) => {\n  useEffect(() => {\n    ScrollManager.init()\n    return () => ScrollManager.destroy()\n  }, [])\n\n  const post = data.markdownRemark\n  const metaData = data.site.siteMetadata\n  const { title, comment, siteUrl, author } = metaData\n  const { utterances } = comment\n  const { title: postTitle, date } = post.frontmatter\n\n  return (\n    <Layout location={location} title={title}>\n      <Head title={postTitle} description={post.excerpt} />\n      <PostTitle title={postTitle} />\n      <PostDate date={date} />\n      <PostContainer html={post.html} />\n      <div className=\"bio-container\">\n        <Bio />\n      </div>\n      <PostNavigator pageContext={pageContext} />\n      {!!utterances && <Utterances repo={utterances} />}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n        comment {\n          utterances\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 280)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`\n"],"sourceRoot":""}